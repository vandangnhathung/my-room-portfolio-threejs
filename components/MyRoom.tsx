/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, useTexture, OrbitControls, PerspectiveCamera, PresentationControls } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame, useThree } from '@react-three/fiber'
import { log } from 'console'

type GLTFResult = GLTF & {
  nodes: {
    camera: THREE.Mesh
    guitar: THREE.Mesh
    screen: THREE.Mesh
    screen001: THREE.Mesh
    player_button: THREE.Mesh
    misc_things: THREE.Mesh
    room: THREE.Mesh
    keyboard: THREE.Mesh
    headphone: THREE.Mesh
    World: THREE.Mesh
    bulb: THREE.Mesh
    chair: THREE.Mesh
    mouse: THREE.Mesh
    workspace: THREE.Mesh
    sofa: THREE.Mesh
    cup_coaster: THREE.Mesh
  }
  materials: {
    [key: string]: THREE.MeshStandardMaterial
  }
}

export function MyRoom(props: React.JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/models/Room_Portfolio.glb') as unknown as GLTFResult;
  // controls to get the camera position and rotation for the orbit controls
  // const { camera } = useThree();
  // const controls = useThree(state => state.controls)

  const firstTexture = useTexture('/textures/room/FirstSetTexture.webp');
  firstTexture.flipY = false;
  firstTexture.colorSpace = THREE.SRGBColorSpace;
  firstTexture.minFilter = THREE.LinearFilter;
  firstTexture.magFilter = THREE.LinearFilter;
  const firstMaterial = new THREE.MeshStandardMaterial({ map: firstTexture });

  const secondTexture = useTexture('/textures/room/SecondSetTexture.webp');
  secondTexture.flipY = false;
  secondTexture.colorSpace = THREE.SRGBColorSpace;
  secondTexture.minFilter = THREE.LinearFilter;
  secondTexture.magFilter = THREE.LinearFilter;
  const secondMaterial = new THREE.MeshStandardMaterial({ map: secondTexture });

  const thirdTexture = useTexture('/textures/room/ThirdSetTexture.webp');
  thirdTexture.flipY = false;
  thirdTexture.minFilter = THREE.LinearFilter;
  thirdTexture.magFilter = THREE.LinearFilter;
  const thirdMaterial = new THREE.MeshStandardMaterial({ map: thirdTexture });

  const fourthTexture = useTexture('/textures/room/FourthSetTexture.webp');
  fourthTexture.flipY = false;
  fourthTexture.minFilter = THREE.LinearFilter;
  fourthTexture.magFilter = THREE.LinearFilter;
  const fourthMaterial = new THREE.MeshStandardMaterial({ map: fourthTexture });

  const worldTexture = useTexture('/textures/room/world_baking.webp');
  worldTexture.flipY = false;
  worldTexture.colorSpace = THREE.SRGBColorSpace;
  worldTexture.minFilter = THREE.LinearFilter;
  worldTexture.magFilter = THREE.LinearFilter;
  const worldMaterial = new THREE.MeshStandardMaterial({ map: worldTexture });

  const sofaTexture = useTexture('/textures/room/sofa_baking.webp');
  sofaTexture.flipY = false;
  sofaTexture.colorSpace = THREE.SRGBColorSpace;
  sofaTexture.minFilter = THREE.LinearFilter;
  sofaTexture.magFilter = THREE.LinearFilter;
  const sofaMaterial = new THREE.MeshStandardMaterial({ map: sofaTexture });
  return (
    <>
      <OrbitControls 
      makeDefault target={[4.149959777666874, 4.647045028235788, 1.2788151669711065]}
      minDistance={5}
      maxDistance={15}
      minPolarAngle={0}
      maxPolarAngle={Math.PI / 2}
      minAzimuthAngle={Math.PI * -1}
      maxAzimuthAngle={Math.PI * -1 / 2}
      />
      <group {...props} dispose={null}>
        <group name="Scene">
          <mesh
            name="camera"
            castShadow
            receiveShadow
            geometry={nodes.camera.geometry}
            material={thirdMaterial}
            position={[5.437, 4.35, 3.307]}
          />
          <mesh
            name="guitar"
            castShadow
            receiveShadow
            geometry={nodes.guitar.geometry}
            material={thirdMaterial}
            position={[3.849, 4.601, -6.452]}
          />
          <mesh
            name="screen"
            castShadow
            receiveShadow
            geometry={nodes.screen.geometry}
            material={thirdMaterial}
            position={[5.292, 5.872, -0.059]}
          />
          <mesh
            name="screen001"
            castShadow
            receiveShadow
            geometry={nodes.screen001.geometry}
            material={secondMaterial}
            position={[5.384, 5.872, 3.272]}
          />
          <mesh
            name="player_button"
            castShadow
            receiveShadow
            geometry={nodes.player_button.geometry}
            material={thirdMaterial}
            position={[-1.965, 4.711, 2.343]}
          />
          <mesh
            name="misc_things"
            castShadow
            receiveShadow
            geometry={nodes.misc_things.geometry}
            material={fourthMaterial}
            position={[1.125, 12.001, -1.266]}
          />
          <mesh
            name="room"
            castShadow
            receiveShadow
            geometry={nodes.room.geometry}
            material={firstMaterial}
            position={[-4.36, 3.045, 3.738]}
          />
          <mesh
            name="keyboard"
            castShadow
            receiveShadow
            geometry={nodes.keyboard.geometry}
            material={fourthMaterial}
            position={[4.264, 4.152, 0.668]}
          />
          <mesh
            name="headphone"
            castShadow
            receiveShadow
            geometry={nodes.headphone.geometry}
            material={thirdMaterial}
            position={[4.97, 4.326, 0.103]}
          />
          <mesh
            name="World"
            castShadow
            receiveShadow
            geometry={nodes.World.geometry}
            material={worldMaterial}
            position={[4.708, 28.521, -1.236]}
          />
          <mesh
            name="bulb"
            castShadow
            receiveShadow
            geometry={nodes.bulb.geometry}
            material={firstMaterial}
            position={[1.123, 10.81, -1.984]}
          />
          <mesh
            name="chair"
            castShadow
            receiveShadow
            geometry={nodes.chair.geometry}
            material={thirdMaterial}
            position={[3.933, 1.619, 1.513]}
          />
          <mesh
            name="mouse"
            castShadow
            receiveShadow
            geometry={nodes.mouse.geometry}
            material={thirdMaterial}
            position={[4.136, 4.123, 2.376]}
          />
          <mesh
            name="workspace"
            castShadow
            receiveShadow
            geometry={nodes.workspace.geometry}
            material={secondMaterial}
            position={[-0.223, 5.891, 4.068]}
          />
          <mesh
            name="sofa"
            castShadow
            receiveShadow
            geometry={nodes.sofa.geometry}
            material={sofaMaterial}
            position={[-0.223, 5.891, 4.068]}
          />
          <mesh
            name="cup_coaster"
            castShadow
            receiveShadow
            geometry={nodes.cup_coaster.geometry}
            material={thirdMaterial}
            position={[-0.223, 5.891, 4.068]}
          />
          </group>
        </group>
    </>
  )
}

useGLTF.preload('/Room_Portfolio.glb')
