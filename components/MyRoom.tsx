/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    camera: THREE.Mesh
    guitar: THREE.Mesh
    screen: THREE.Mesh
    screen001: THREE.Mesh
    player_button: THREE.Mesh
    lamp: THREE.Mesh
    lamp001: THREE.Mesh
    lamp002: THREE.Mesh
    Plane038: THREE.Mesh
    book_cabinet: THREE.Mesh
    keyboard: THREE.Mesh
    headphone: THREE.Mesh
    World: THREE.Mesh
    bulb: THREE.Mesh
    leme_chair: THREE.Mesh
    mouse: THREE.Mesh
  }
  materials: {[key: string]: THREE.MeshStandardMaterial};
}

export function MyRoom(props: React.JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/models/Room_Portfolio.glb') as unknown as GLTFResult;
  const firstTexture = useTexture('/textures/room/FirstSetTexture.webp');
  firstTexture.flipY = false;
  firstTexture.colorSpace = THREE.SRGBColorSpace;
  firstTexture.minFilter = THREE.LinearFilter;
  firstTexture.magFilter = THREE.LinearFilter;
  const firstMaterial = new THREE.MeshStandardMaterial({ map: firstTexture });

  const secondTexture = useTexture('/textures/room/SecondSetTexture.webp');
  secondTexture.flipY = false;
  secondTexture.colorSpace = THREE.SRGBColorSpace;
  secondTexture.minFilter = THREE.LinearFilter;
  secondTexture.magFilter = THREE.LinearFilter;
  const secondMaterial = new THREE.MeshStandardMaterial({ map: secondTexture });

  const thirdTexture = useTexture('/textures/room/ThirdSetTexture.webp');
  thirdTexture.flipY = false;
  thirdTexture.minFilter = THREE.LinearFilter;
  thirdTexture.magFilter = THREE.LinearFilter;
  const thirdMaterial = new THREE.MeshStandardMaterial({ map: thirdTexture });

  const fourthTexture = useTexture('/textures/room/FourthSetTexture.webp');
  fourthTexture.flipY = false;
  fourthTexture.minFilter = THREE.LinearFilter;
  fourthTexture.magFilter = THREE.LinearFilter;
  const fourthMaterial = new THREE.MeshStandardMaterial({ map: fourthTexture });

  const worldTexture = useTexture('/textures/room/world_baking.webp');
  worldTexture.flipY = false;
  worldTexture.colorSpace = THREE.SRGBColorSpace;
  worldTexture.minFilter = THREE.LinearFilter;
  worldTexture.magFilter = THREE.LinearFilter;
  const worldMaterial = new THREE.MeshStandardMaterial({ map: worldTexture });

  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="camera"
          castShadow
          receiveShadow
          geometry={nodes.camera.geometry}
          material={thirdMaterial}
          position={[5.437, 4.351, 3.307]}
          rotation={[0, 0.425, 0]}
          scale={0.344}
        />
        <mesh
          name="guitar"
          castShadow
          receiveShadow
          geometry={nodes.guitar.geometry}
          material={thirdMaterial}
          position={[3.849, 4.601, -6.452]}
          rotation={[1.735, -0.324, 2.095]}
          scale={[0.148, 0.357, 1.369]}
        />
        <mesh
          name="screen"
          castShadow
          receiveShadow
          geometry={nodes.screen.geometry}
          material={thirdMaterial}
          position={[5.292, 5.872, -0.059]}
          rotation={[-1.553, -0.065, 1.862]}
          scale={[1.709, 1.118, 1.178]}
        />
        <mesh
          name="screen001"
          castShadow
          receiveShadow
          geometry={nodes.screen001.geometry}
          material={secondMaterial}
          position={[5.384, 5.872, 3.272]}
          rotation={[-1.585, -0.108, 1.33]}
          scale={[1.709, 1.118, 1.178]}
        />
        <mesh
          name="player_button"
          castShadow
          receiveShadow
          geometry={nodes.player_button.geometry}
          material={thirdMaterial}
          position={[-1.965, 4.712, 2.343]}
          scale={0.254}
        />
        <mesh
          name="lamp"
          castShadow
          receiveShadow
          geometry={nodes.lamp.geometry}
          material={secondMaterial}
          position={[-0.223, 5.892, 4.068]}
          scale={0.43}
        />
        <mesh
          name="lamp001"
          castShadow
          receiveShadow
          geometry={nodes.lamp001.geometry}
          material={thirdMaterial}
          position={[-0.223, 5.892, 4.068]}
          scale={0.43}
        />
        <mesh
          name="lamp002"
          castShadow
          receiveShadow
          geometry={nodes.lamp002.geometry}
          material={thirdMaterial}
          position={[-0.223, 5.892, 4.068]}
          scale={0.43}
        />
        <mesh
          name="Plane038"
          castShadow
          receiveShadow
          geometry={nodes.Plane038.geometry}
          material={fourthMaterial}
          position={[1.125, 12.001, -1.266]}
          rotation={[0, 0, 1.562]}
          scale={0.726}
        />
        <mesh
          name="book_cabinet"
          castShadow
          receiveShadow
          geometry={nodes.book_cabinet.geometry}
          material={firstMaterial}
          position={[-4.36, 3.046, 3.738]}
        />
        <mesh
          name="keyboard"
          castShadow
          receiveShadow
          geometry={nodes.keyboard.geometry}
          material={fourthMaterial}
          position={[4.264, 4.152, 0.668]}
          rotation={[0, 0, 0.018]}
        />
        <mesh
          name="headphone"
          castShadow
          receiveShadow
          geometry={nodes.headphone.geometry}
          material={thirdMaterial}
          position={[4.97, 4.326, 0.103]}
          rotation={[0, 0.4, -Math.PI]}
          scale={[0.135, 0.158, 0.135]}
        />
        <mesh
          name="World"
          castShadow
          receiveShadow
          geometry={nodes.World.geometry}
          material={worldMaterial}
          position={[4.708, 28.521, -1.236]}
          scale={-28.087}
        />
        <mesh
          name="bulb"
          castShadow
          receiveShadow
          geometry={nodes.bulb.geometry}
          material={nodes.bulb.material}
          position={[1.123, 10.81, -1.984]}
          scale={0.093}
        />
        <mesh
          name="leme_chair"
          castShadow
          receiveShadow
          geometry={nodes.leme_chair.geometry}
          material={thirdMaterial}
          position={[3.933, 1.62, 1.513]}
          rotation={[0, 1.557, 0]}
          scale={3.95}
        />
        <mesh
          name="mouse"
          castShadow
          receiveShadow
          geometry={nodes.mouse.geometry}
          material={thirdMaterial}
          position={[4.136, 4.123, 2.376]}
          rotation={[0, -0.356, 0]}
          scale={0.204}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/Room_Portfolio.glb')
